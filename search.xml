<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>苹果全家桶太香</title>
      <link href="//growth/life/%E8%8B%B9%E6%9E%9C%E5%85%A8%E5%AE%B6%E6%A1%B6%E5%A4%AA%E9%A6%99%E4%BA%86/"/>
      <url>//growth/life/%E8%8B%B9%E6%9E%9C%E5%85%A8%E5%AE%B6%E6%A1%B6%E5%A4%AA%E9%A6%99%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p><script src="/assets/asciinema-player.js"></script><link rel="stylesheet" type="text/css" href="/assets/asciinema-player.css" /><br>常话说的好，高富玩表，土豪玩车，屌丝玩电脑。<br>作为一名屌丝中的战斗机，电脑必须玩得溜。<br>看着那些陪伴多年，依然坚守岗位默默奋斗的电子设备，我想是时候了，<br>是时候来个咸鱼翻身，升级一套装备再扑腾一阵子。<br>拿自己挣的钱，让自己好活一阵子!<br>所以请苹果闭嘴，一手交钱一手交货！！！快！！！</p>]]></content>
      
      
      <categories>
          
          <category> growth </category>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活记录 </tag>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anisble快速入门</title>
      <link href="//operation/ansible/Ansible/"/>
      <url>//operation/ansible/Ansible/</url>
      
        <content type="html"><![CDATA[<p><script src="/assets/asciinema-player.js"></script><link rel="stylesheet" type="text/css" href="/assets/asciinema-player.css" /></p><p>一篇搞定，快速学习</p><hr><h2 id="一、特点"><a href="#一、特点" class="headerlink" title="一、特点"></a>一、特点</h2><ul><li>模块化： 调用特定的模块，完成特定的内容</li><li>使用 Paramiko(Python对于ssh的实现)，PyYAML,Jinja2(模板语言) 三个关键模块</li><li>支持自定义模块，可以使用任何语言编写</li><li>基于Python实现</li><li>不是简单，基于Python和SSH,无agent，无需代理，不依赖PKI(无需SSL)</li><li>安全，基于OpenSSH</li><li>幂等性：一个任务执行一遍和N边结果是一样的（要注意代码逻辑）</li><li>支持playbook编排任务，YAML格式，编排任务，支持丰富的数据机构</li><li>较强大的role的多层解决方案</li></ul><hr><h2 id="二、架构"><a href="#二、架构" class="headerlink" title="二、架构"></a>二、架构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用户/PLAYBOOK =&gt; INVENTORY/API/MODULES/PLUGINS =&gt; HOSTS/NETWORK</span><br><span class="line">INVEMTORY: Ansible管理主机的清单 /etc/ansible/hosts</span><br><span class="line">MODULES: Ansible执行命令的功能模块、多数为内置核心模块，也可以自定义</span><br><span class="line">PLUGINS: 模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等</span><br><span class="line">API: 供第三方程序调用的应用程序接口</span><br></pre></td></tr></table></figure><h2 id="用户直接使用命令或者使用-Playbook-或者-调用API-去远程主机执行命令"><a href="#用户直接使用命令或者使用-Playbook-或者-调用API-去远程主机执行命令" class="headerlink" title="用户直接使用命令或者使用 Playbook 或者 调用API 去远程主机执行命令"></a>用户直接使用命令或者使用 Playbook 或者 调用API 去远程主机执行命令</h2><h2 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h2><ul><li>执行ansible的主机一般称为主控端，中控，master或堡垒机</li><li>主控段python需要在2.6或以上</li><li>被控端python版本小鱼2.4的需要安装 python-simplejson</li><li>windows不能作为主控</li></ul><hr><h2 id="四、安装"><a href="#四、安装" class="headerlink" title="四、安装"></a>四、安装</h2><ul><li>epel源rpm包安装</li></ul><p><code>sudo yum -y install epel-release &amp;&amp; sudo yum -y install ansible</code></p><ul><li><p><a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html">官方其他安装方式</a></p></li><li><p>查看安装版本和命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible --version</span><br><span class="line"></span><br><span class="line">ansible 2.9.27</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 2.7.5 (default, Nov 16 2020, 22:23:17) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure></li></ul><p><code>rpm -ql ansible</code> 可以查看ansible都下载了哪些文件。<br>也可以在终端输入ansible 后<kbd>Tab<kdb> 键查看输出的命令</p><hr><h2 id="五、基本使用"><a href="#五、基本使用" class="headerlink" title="五、基本使用"></a>五、基本使用</h2><h3 id="准备机器"><a href="#准备机器" class="headerlink" title="准备机器"></a>准备机器</h3><div class="table-container"><table><thead><tr><th>节点名称</th><th>节点IP</th><th>角色</th></tr></thead><tbody><tr><td>k8s-master-001</td><td>10.241.12.3</td><td>Ansible-Server</td></tr><tr><td>k8s-master-003</td><td>10.241.12.1</td><td>被控制端</td></tr><tr><td>k8s-master-002</td><td>10.241.12.2</td><td>被控制端</td></tr><tr><td>k8s-node-003</td><td>10.241.12.9</td><td>被控制端</td></tr><tr><td>k8s-node-001</td><td>10.241.12.12</td><td>被控制端</td></tr></tbody></table></div><h3 id="anisble管理主机的方式"><a href="#anisble管理主机的方式" class="headerlink" title="anisble管理主机的方式"></a>anisble管理主机的方式</h3><ul><li>Ad-HC 即利用ansible命令，主要用于临时命令场景</li><li>Ansible-playbook 主要用于长期规划好的，大型项目的使用，需要有前期的规划过程。</li></ul><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ul><li>/etc/ansible/ansible.cfg #主配置文件，配置ansible工作  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[defaults]</span><br><span class="line">inventory = /etc/ansible/hosts #主机列表</span><br><span class="line">library = /usr/share/my_modules #库文件存放目录</span><br><span class="line">remote_tmp = $HOME/.ansible/tmp #临时 py 命令文件存放在远程主机目录</span><br><span class="line">local_tmp = $HOME/.ansible/tmp #本机的临时命令执行目录</span><br><span class="line">forks = 5 #默认并发数量</span><br><span class="line">sudo_user = root #默认sudo用户</span><br><span class="line">ask_sudo_pass = True #每次执行ansible 命令是否询问ssh密码</span><br><span class="line">ask_pass = True</span><br><span class="line">remote_port =22</span><br><span class="line">host_key_checking = False #检查对应服务器的host_key, 建议取消注释</span><br><span class="line">log_path = /var/log/ansible.log #日志文件 建议启用</span><br><span class="line">module_name = command #默认模块，可以修改为shell模块 </span><br></pre></td></tr></table></figure></li><li>/etc/ansible/hosts #主机清单<br>为了批量快捷的管理部分主机  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#举例子</span><br><span class="line">#[标签名]</span><br><span class="line">#ip1</span><br><span class="line">#ip2</span><br><span class="line">#ip3:222</span><br><span class="line">#将下面的配置写入 /etc/ansible/hosts</span><br><span class="line">[k8s-master]</span><br><span class="line">#k8s-master-003</span><br><span class="line">10.241.12.1</span><br><span class="line">#k8s-master-002</span><br><span class="line">10.241.12.2</span><br><span class="line">[k8s-slave]</span><br><span class="line">#k8s-node-003</span><br><span class="line">10.241.12.9</span><br><span class="line">#k8s-node-001</span><br><span class="line">10.241.12.12</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>/etc/ansible/role #存放角色</li></ul><h3 id="ansible-doc-命令文档"><a href="#ansible-doc-命令文档" class="headerlink" title="ansible-doc 命令文档"></a>ansible-doc 命令文档</h3><p>此命令用来显示模块的帮助文档<br>格式<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc [OPTION] [MODULE...]</span><br><span class="line">-l , --list #列出可用模块</span><br><span class="line">-s , --snippet #显示指定模块的playbook片段</span><br><span class="line">例子</span><br><span class="line">ansible-doc -s ping</span><br></pre></td></tr></table></figure></p><h3 id="ansible-命令"><a href="#ansible-命令" class="headerlink" title="ansible 命令"></a>ansible 命令</h3><p>使用SSH协议实现对远程主机的配置。 所以主控端需要能基于密钥认证的方式联系哥哥被管理节点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如使用sshpass批量实现key的验证</span></span><br><span class="line">ssh-keygen -f /root/.ssh/id_rsa -P <span class="string">&#x27;&#x27;</span></span><br><span class="line">NET= 192.168.100</span><br><span class="line"><span class="built_in">export</span> SSHPASS=xxxx</span><br><span class="line"><span class="keyword">for</span> IP <span class="keyword">in</span> &#123;1..200&#125;;<span class="keyword">do</span></span><br><span class="line">  sshpass -e ssh-copy-id <span class="variable">$NET</span>.<span class="variable">$IP</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &lt;host_pattern&gt; [ -m module_name] [-a args]</span><br></pre></td></tr></table></figure><h4 id="重要选项说明"><a href="#重要选项说明" class="headerlink" title="重要选项说明"></a>重要选项说明</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--version #显示版本</span><br><span class="line">-m moudle #指定模块，默认为command</span><br><span class="line">-v #详细过程 -vv -vvv 更加详细</span><br><span class="line">--list-hosts #列出主机列表</span><br><span class="line">-k, --ask-pass #提示输入ssh连接密码，默认key验证</span><br><span class="line">-C, --check #检查，并不执行</span><br><span class="line">-T, --timeout=TIMEOUT #执行远程命令的用户,默认10S</span><br><span class="line">-u，--user=PEMOTE_USER #执行园长执行的用户</span><br><span class="line">-b, --become #代替旧版的sudo 切换</span><br><span class="line">--beconme-user=USERNAME #指定sudo的runas用户，默认为root</span><br><span class="line">-K, --ask-becomne-pass #提示输入sudo时的口令</span><br></pre></td></tr></table></figure><p>举例使用ping模块<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># ansible all -m ping 或者  ansible k8s-master#这里指定了hosts里写的标签组 -m ping</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">10.241.12.1 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">10.241.12.12 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">10.241.12.2 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">10.241.12.9 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>如果没有验证通过，需要 -k 来输入密码，很麻烦。所以建议使用秘钥。</p><h3 id="选择特定主机"><a href="#选择特定主机" class="headerlink" title="选择特定主机"></a>选择特定主机</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master-001 ~]# ansible all --list-hosts</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">  hosts (4):</span><br><span class="line">    10.241.12.9</span><br><span class="line">    10.241.12.12</span><br><span class="line">    10.241.12.1</span><br><span class="line">    10.241.12.2</span><br><span class="line">#或者指定标签组</span><br><span class="line">[root@k8s-master-001 ~]# ansible k8s-master --list-hosts</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">  hosts (2):</span><br><span class="line">    10.241.12.1</span><br><span class="line">    10.241.12.2</span><br></pre></td></tr></table></figure><p>使用通配符指定主机<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ansible &#x27;*&#x27; --list-hosts</span><br><span class="line">ansible 10.241.* --list-hosts</span><br><span class="line">ansible 10.241.12.1:10.241.12.2 --list-hosts #俩个机器中的一个 ，或者关系</span><br><span class="line">ansible &#x27;k8s-master:&amp;k8s-node&#x27; --list-hosts #与的关系，在k8s-master标签组里也在k8s-node里面</span><br><span class="line">ansible &#x27;k8s-master:!k8s-node&#x27; --list-hosts #非得关系，在k8s-master标签组里但不在 k8s-node里面</span><br></pre></td></tr></table></figure><br>正则表达式选择主机<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &#x27;~(k8s-master|k8s-node)&#x27; -m ping</span><br></pre></td></tr></table></figure></p><h3 id="Ansible-执行命令的过程"><a href="#Ansible-执行命令的过程" class="headerlink" title="Ansible 执行命令的过程"></a>Ansible 执行命令的过程</h3><p>1.加载 默认的/etc/ansible/ansible.cfg<br>2.加载自己对应的模块文件，如 command<br>3.通过ansible将模块或者命令生成对应的临时py文件，将文件传输至远程服务器对应执行用户的$HOME/.ansible/tmp/ansible-tmp-数字/xxx.py<br>4.赋予执行权限<br>5.执行并且返回结果<br>6.删除py文件，退出</p><h3 id="ansible执行的状态"><a href="#ansible执行的状态" class="headerlink" title="ansible执行的状态"></a>ansible执行的状态</h3><p>在 /etc/ansible/ansible.cfg 的 [colers] 模块中有颜色的详细说明<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[colors]</span><br><span class="line">#highlight = white</span><br><span class="line">#verbose = blue</span><br><span class="line">#warn = bright purple</span><br><span class="line">#error = red</span><br><span class="line">#debug = dark gray</span><br><span class="line">#deprecate = purple</span><br><span class="line">#skip = cyan</span><br><span class="line">#unreachable = red</span><br><span class="line">#ok = green</span><br><span class="line">#changed = yellow</span><br><span class="line">#diff_add = green</span><br><span class="line">#diff_remove = red</span><br><span class="line">#diff_lines = cyan</span><br></pre></td></tr></table></figure></p><h3 id="ansible-galaxy-ansible-使用别人下载的工具"><a href="#ansible-galaxy-ansible-使用别人下载的工具" class="headerlink" title="ansible-galaxy # ansible 使用别人下载的工具"></a>ansible-galaxy # ansible 使用别人下载的工具</h3><p>此工具会链接 <a href="https://galaxy.ansible.com">https://galaxy.ansible.com</a> 下载对应的roles</p><p>列出已经安装的galaxy<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy list</span><br></pre></td></tr></table></figure><br>下载对应的 roles<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">ansible-galaxy install pogosoftware.etcd</span><br><span class="line">#返回内容&quot;</span><br><span class="line">#- downloading role &#x27;etcd&#x27;, owned by pogosoftware</span><br><span class="line">#- downloading role from https://github.com/pogosoftware/ansible-role-etcd/archive/v1.0.2.tar.gz</span><br><span class="line">#- extracting pogosoftware.etcd to /root/.ansible/roles/pogosoftware.etcd</span><br><span class="line">#- pogosoftware.etcd (v1.0.2) was installed successfully</span><br></pre></td></tr></table></figure><br>查看里面的roles结构<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> tree  /root/.ansible/roles/pogosoftware.etcd</span><br><span class="line">/root/.ansible/roles/pogosoftware.etcd</span><br><span class="line">├── defaults</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── LICENSE</span><br><span class="line">├── meta</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   ├── etcd_user.yml</span><br><span class="line">│   └── main.yml</span><br><span class="line">└── templates</span><br><span class="line">    └── etcd.service.j2</span><br><span class="line"></span><br><span class="line">5 directories, 7 files</span><br><span class="line">#可以 cp -a 一个文件名称然后再里面改自己的定制化需求</span><br></pre></td></tr></table></figure></p><p>删除galaxy</p><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy remove pogosoftware.etcd</span><br></pre></td></tr></table></figure></h2><h3 id="ansible-pull"><a href="#ansible-pull" class="headerlink" title="ansible-pull"></a>ansible-pull</h3><p>将ansible的命令推送至远程</p><h3 id="ansible-palybook-后面有详解"><a href="#ansible-palybook-后面有详解" class="headerlink" title="ansible-palybook (后面有详解)"></a>ansible-palybook (后面有详解)</h3><p>此工具用于编写好的playbook任务<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat hello.yml</span><br><span class="line">- hosts: k8s-slave</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">    - name: hello world</span><br><span class="line">      command: /usr/bin/wall hello world</span><br><span class="line"></span><br><span class="line">#执行的时候记得打开 k8s-slave中的一个主机终端看效果</span><br><span class="line"> ansible k8s-slave  --list-host</span><br><span class="line"> 会发现终端输出了 hello  world</span><br></pre></td></tr></table></figure></p><h3 id="ansible-vault-加密yml文件"><a href="#ansible-vault-加密yml文件" class="headerlink" title="ansible-vault 加密yml文件"></a>ansible-vault 加密yml文件</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ansible-vaut encrypt hello.yml #加密 会让输入加密口令</span><br><span class="line">ansible-vaut decrypt hello.yml #解密</span><br><span class="line">ansiblt-vault view hello.yml #查看</span><br><span class="line">ansible-vault edit hello.yml #编辑加密文件</span><br><span class="line">ansiblt-vault rekey hello.yml #修改口令</span><br><span class="line">ansiblt-vault create new.yml #创建新文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ansible-console-可交互命令"><a href="#ansible-console-可交互命令" class="headerlink" title="ansible-console 可交互命令"></a>ansible-console 可交互命令</h3><p>支持tab<br>提示符号格式：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行用户@当前操作主机组（当期主机组的主机数量）[f:并发数]$</span><br></pre></td></tr></table></figure><br>常用子命令：</p><ul><li>设置并发数量：forks n 例如 forks 10</li><li>切换组： cd 主机组 例如 cd web</li><li>列出当前主机组例如 list</li><li>列出所有的内置命令： ？ 或者help</li></ul><p>例子<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ansible-console</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">Welcome to the ansible console.</span><br><span class="line">Type help or ? to list commands.</span><br><span class="line"></span><br><span class="line">root@all (4)[f:5]$ cd k8s-master</span><br><span class="line">root@k8s-master (2)[f:5]$ list</span><br><span class="line">10.241.12.1</span><br><span class="line">10.241.12.2</span><br><span class="line">root@k8s-master (2)[f:5]$ yum name=lftp</span><br><span class="line">10.241.12.1 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;msg&quot;: &quot;&quot;,</span><br><span class="line">    &quot;rc&quot;: 0,</span><br><span class="line">    &quot;results&quot;: [</span><br><span class="line">        &quot;lftp-4.4.8-12.el7_8.1.x86_64 providing lftp is already installed&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h2 id="六、Ansible-常用模块"><a href="#六、Ansible-常用模块" class="headerlink" title="六、Ansible 常用模块"></a>六、Ansible 常用模块</h2><h3 id="Command-模块"><a href="#Command-模块" class="headerlink" title="Command 模块"></a>Command 模块</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>…持续更新中</p>]]></content>
      
      
      <categories>
          
          <category> operation </category>
          
          <category> ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> 运维 </tag>
            
            <tag> 运维工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
